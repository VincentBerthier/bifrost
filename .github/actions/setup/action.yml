name: 'Bifrost Environment Setup'
description: 'Sets up the environment & tools needed to run the workflows'
inputs:
  rust-version:
    description: 'Version of rust to install'
    required: false
    default: 'nightly-2025-01-28'
  install-rust:
    description: 'Determines if the Rust tools should be loaded'
    required: false
    default: 'true'
  install-mold:
    description: 'Determines if the mold linker should be installed'
    required: false
    default: 'false'
  initial:
    description: 'Determines if this is the first setup in the workflow'
    required: false
    default: false
runs:
  using: "composite"
  steps:
    # Rust toolchain
    - name: Rust cache setup
      if: inputs.install-rust == 'true'
      id: rust-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          ~/.rustup
        key: rust-install-${{ inputs.rust-version }}
        lookup-only: ${{ inputs.initial }}
        fail-on-cache-miss: ${{ !inputs.initial }}
    - name: Install rust toolchain
      id: rust-install
      if: ${{ inputs.install-rust == 'true' && steps.rust-cache.outputs.cache-hit != 'true' }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ inputs.rust-version }}
        components: rustfmt, clippy, llvm-tools-preview
    - name: Install mold linker
      id: mold-install
      if: inputs.install-mold == 'true'
      uses: rui314/setup-mold@v1
    - name: Install cargo tools
      id: tools-install
      if: ${{ inputs.install-rust == 'true' && steps.rust-cache.outputs.cache-hit != 'true' }}
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest, cargo-spellcheck, cargo-deny, cargo-llvm-cov, cargo-audit
    - name: Set Rust path
      shell: bash
      id: rust-path
      if: inputs.install-rust == 'true'
      run: |
        echo "~/.cargo/bin" >> $GITHUB_PATH
        echo "/root/.cargo/bin" >> $GITHUB_PATH # thatâ€™s just for act
    
  
